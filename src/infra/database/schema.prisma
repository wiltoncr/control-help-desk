generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model User {
  id       Int           @id @default(autoincrement())
  email    String        @unique
  password String
  name     String?
  role     RoleUser
  companys CompanyUser[]
}

model Client {
  id            Int             @id @default(autoincrement())
  name          String
  cnpj          String
  email         String?         @db.VarChar(255)
  access        ClientAccess[]
  companys      CompanyUser[]
  CompanyClient CompanyClient[]
}

model CompanyUser {
  id         String   @id @default(uuid())
  userId     Int
  companyId  Int
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  Company    Company  @relation(fields: [companyId], references: [id])
  user       User     @relation(fields: [userId], references: [id])

  Client Client[]
}

model CompanyClient {
  id         String   @id @default(uuid())
  clientId   Int
  companyId  Int
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  Company    Company  @relation(fields: [companyId], references: [id])
  client     Client   @relation(fields: [clientId], references: [id])
}

model ClientAccess {
  accessId   Int
  clientId   Int
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  id         String   @id @default(uuid())
  access     Access   @relation(fields: [accessId], references: [id])
  Client     Client   @relation(fields: [clientId], references: [id])
}

model Company {
  id            Int             @id @default(autoincrement())
  name          String
  cnpj          String
  email         String
  role          RoleUser
  CompanyUser   CompanyUser[]
  CompanyClient CompanyClient[]
}

model Access {
  id         Int                @id @default(autoincrement())
  type       Int
  server     Boolean
  access     String
  desc       String
  typeAccess AccessTypeAccess[]
  clients    ClientAccess[]
}

model AccessTypeAccess {
  id           String     @id @default(uuid())
  accessId     Int
  typeAccessId Int
  created_at   DateTime   @default(now())
  updated_at   DateTime   @updatedAt
  access       Access     @relation(fields: [accessId], references: [id])
  typeAccess   TypeAccess @relation(fields: [typeAccessId], references: [id])
}

model TypeAccess {
  id          Int                @id @default(autoincrement())
  description String
  role        RoleUser
  access      AccessTypeAccess[]
}

enum RoleUser {
  ADMIN
  SUPORTE
  CLIENTE
}
